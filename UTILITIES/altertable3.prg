**ALTERTABLE3 SERVIRA PARA REALIZAR AQUELLOS AJUSTES MMAS ESPECIFICOS QUE UN ALTERTABLE2, Y QUE SE APLICAN SOLO A UNA EMPRESA
*CON EL TIEMPO DEBERA INTEGRARSE EN VENTANACOMANDOS Y SU PROPIA TABLA PARA CLASIFICAR POR CLIENTE Y FILTRAR POR CLIENTE 
*ASI SOLO SE APLICARA A LA EMPRESA QUE LE CORRESPONDE
*DO QUIMCOLCUADRARCLIENTES

PROCEDURE EQUICONCLEANPLS 
	CLOSE TABLES ALL 
	CLEAR ALL 
	DELETE FROM PLPLNA
	DELETE FROM PLPLNA_D
	DELETE FROM PLPLNA_E
	DELETE FROM PLPER_D
	DELETE FROM PLIE_D
	DELETE FROM PLPER
	DELETE FROM PLPLNA_E
ENDPROC 

PROCEDURE EQUICONFIXPROVEEDORES2
	CLOSE TABLES ALL 
	USE C2
	SET FILTER TO CODIGO="21201"
	SET ORDER TO FECHA   && STR(TP,1)+DTOS(FECHA)+STR(NUMERO,6)+ORDEN
	GO TOP
	_VFP.DataToClip(,,3)


	DELETE FILE  CONTA\DATA\*.*
	RMDIR CONTA\DATA


	CLOSE TABLES ALL
	CLOSE DATABASES ALL
	CLEAR ALL

	SELECT SUM(DEBE), SUM(HABER) FROM C2 WHERE CODIGO="21201" INTO CURSOR PROVPRUEBA
	_VFP.DataToClip(,,3)

ENDPROC 


PROCEDURE EQUICONFIXPROVEEDORES
	CLOSE TABLES ALL 
	USE C1 

	SET ORDER TO CODIGO 
	SET FILTER TO CODIGO="21201"
	GO TOP 
	DO WHILE !EOF()
		lcCodigoTrimed=ALLTRIM(codigo)
		lcPart1=SUBSTR(lcCodigoTrimed,1,3)
		lcPart15=SUBSTR(lcCodigoTrimed,4,2)
		lcPart2=ALLTRIM(SUBSTR(lcCodigoTrimed,6,LEN(lcCodigoTrimed)))
		lcCodEnhanded=lcPart1+PADL(lcPart15,3,"0")+PADL(lcPart2,3,"0")
		REPLACE  codigo WITH lcCodEnhanded, dep WITH lcCodigoTrimed		
		UPDATE C2 SET CODIGO=lcCodEnhanded WHERE ALLTRIM(CODIGO)==ALLTRIM(lcCodigoTrimed)
		WAIT lcCodEnhanded WINDOW NOWAIT 
		SKIP 1 
	ENDDO 
ENDPROC 




PROCEDURE fixprovs
	IF !USED("proveedores")
		USE proveedores IN 0 
	ENDIF 
	
	REPLACE ALL departamento WITH iddepartamento IN proveedores 
	
		
	REPLACE ALL iddepartamento WITH SUBSTR(idmuni,1,2) IN proveedores 
	REPLACE ALL FPAGO WITH "TP00000003" IN proveedores 
	
	GO TOP IN "proveedores"
	DO WHILE !EOF("proveedores")
		IF AT("S.A.",NOMBRE)>0 OR AT("C.V.",NOMBRE)>0
			REPLACE PERSONERIA WITH 2 
		ELSE
			REPLACE PERSONERIA WITH 1
		ENDIF 
		
		SKIP 1 IN PROVEEDORES
	ENDDO 
	
	
ENDPROC 

PROCEDURE EQUICONFIXCONTACLIENTES4
	CLOSE TABLES ALL 
	USE C1
	USE C2 IN 0 
	SET FILTER TO CODIGO="112001"
	SELECT c1 
	GO TOP 

	DO WHILE !EOF()
		LCCODNEW=CODIGO
		LCCODVIEJO=DEP		
		REPLACE ALL codigo WITH LCCODNEW FOR CODIGO=LCCODVIEJO IN c2 
		WAIT "CODIGO VIEJO "+LCCODVIEJO +" por "+LCCODNEW WINDOW NOWAIT 
		SKIP 1 
	ENDDO 
ENDPROC 


PROCEDURE EQUICONFIXCONTACLIENTES3
	CLOSE TABLES ALL 
	USE C1 

	SET ORDER TO CODIGO 
	SET FILTER TO CODIGO="11201"
	GO TOP 
	DO WHILE !EOF()
		lcCodigoTrimed=ALLTRIM(codigo)
		lcPart1=SUBSTR(lcCodigoTrimed,1,3)
		lcPart2=SUBSTR(lcCodigoTrimed,4,LEN(lcCodigoTrimed))
		lcCodEnhanded=lcPart1+"0"+lcPart2
		REPLACE  codigo WITH lcCodEnhanded, dep WITH lcCodigoTrimed		
		WAIT lcCodEnhanded WINDOW NOWAIT 
		SKIP 1 
	ENDDO 

ENDPROC 
PROCEDURE EQUICONFIXCONTACLIENTES2
	CLOSE TABLES ALL 
	USE C1 
	USE C2 IN 0 
	SET ORDER TO CODIGO 
	LASTCOD="11201157"
	SET FILTER TO CODIGO>="1120141" AND CODIGO<="1120175"
	GO TOP 
	DO WHILE !EOF()
		WAIT CODIGO WINDOW NOWAIT 
		LCCODVIEJO=CODIGO
		LCCODNUEVO=DEP
		REPLACE CODIGO WITH LCCODNUEVO IN C1 
		REPLACE ALL CODIGO WITH LCCODNUEVO, QUEDAN WITH LCCODVIEJO FOR ALLTRIM(CODIGO)==ALLTRIM(LCCODVIEJO) IN C2 
		SKIP 1 
	ENDDO 	
ENDPROC 



PROCEDURE EQUICONFIXCONTACLIENTES 
	CLOSE TABLES ALL 
	USE C1 
	SET ORDER TO CODIGO 
	LASTCOD="11201157"
	SET FILTER TO CODIGO>="1120141" AND CODIGO<="1120175"
	GO TOP 
	DO WHILE !EOF()
		LASTCOD=TRANSFORM(VAL(LASTCOD)+1)
		REPLACE DEP WITH LASTCOD IN C1 
		SKIP 1 
	ENDDO 	
	
ENDPROC 

PROCEDURE EQUICONFIXFACTSWITHOUTDETAIL
	SELECT IDVENTA, DESCRIPCION, SNETO FROM FACTURAS WHERE IDVENTA NOT IN (SELECT IDVENTA FROM facturaslines ) INTO ARRAY LAFACTURASWITHOUT
	
	IF !VARTYPE(LAFACTURASWITHOUT)="U"
		lnLineas=0
		lnLineasOmitidas=0
		FOR lnFact=1 TO ALEN(LAFACTURASWITHOUT,1)

			RELEASE laIdVenta
			lcIdVenta=LAFACTURASWITHOUT(lnFact,1)
			lcDescripcion=LAFACTURASWITHOUT(lnFact,2)
			lnSneto=LAFACTURASWITHOUT(lnFact,3)
			lnCantidad=1
			SELECT idventa FROM facturaslines WHERE idventa=lcIdVenta INTO ARRAY laIdventa 
			IF VARTYPE(laIdventa)="U"
				lnLineas = lnLineas + 1 
				WAIT "Insertando: "+ lcIdVenta+" "+lcDescripcion+" "+TRANSFORM(lnSneto) WINDOW NOWAIT 
				INSERT INTO facturaslines 	(idventa, descripcion, cantidad, precio);
				values 	(lcIdVenta,lcDescripcion,lnCantidad,lnSneto)
			ELSE
				lnLineasOmitidas= lnLineasOmitidas+ 1 
				WAIT "ya existe : "+ lcIdVenta+" "+lcDescripcion+" "+TRANSFORM(lnSneto) WINDOW NOWAIT 			
			ENDIF 
			
		ENDFOR 
		lcMsg=	TRANSFORM(lnLineas )+" lineas insertadas"+CHR(13)+;
				TRANSFORM(lnLineasOmitidas)+" lineas ya existian"
		
		
	ELSE
		lcMsg="Ninguna factura carece de lineas "
	ENDIF 
	MESSAGEBOX(lcMsg,16,"Resumen")
ENDPROC 


PROCEDURE QUIMCOLCUADRARCLIENTES
	
	USE C2 IN 0 
	SELECT C2 
	DELETE FOR FECHA<=CTOD("31/03/2015")
	USE 
		
ENDPROC 


PROCEDURE ActualizarCamypeConta
	USE "C:\Users\YEC\Documents\FOX\CONTAS\FRANK_2015_10_31\camype\DBFS9\DBFS9\cgdetpar.dbf" IN 0 
	USE "C:\Users\YEC\Documents\FOX\CONTAS\FRANK_2015_10_31\camype\CONTA3\DATA\C2.DBF" IN 0 
	
	SELECT * FROM c2 INTO ARRAY laDatac2
	
	IF VARTYPE(laDatac2)="U"
		INSERT INTO c2 (CODIGO,numero,descrip,debe,haber,fecha,tp);
		SELECT DET_NO_CTA,DET_NOPART,DET_CONCEP,DET_VALORC,DET_VALORA,DET_FECHA,"3" FROM cgdetpar

		**generar la tabla c2_M y crear los cursores 
		DO jun2015c2_M IN altertable2
		DO jun2015c2conta IN altertable2
		DO jun2015c1conta IN altertable2
		DO sepmodcontac2 IN altertable2
		DO nov2015updateindexconta IN altertable2
		**generar la tabla c2_M y crear los cursores 
	ELSE
		MESSAGEBOX("Existe informacion en el sistema, debe limpiar la base de datos para poder realizar esta funcion",16,"Error")
	ENDIF 	
	
ENDPROC 


PROCEDURE OMNISERVICE_FIXDEPTOCLIENTES
	SELECT IDCLIENTE,MAX(DEPTO) FROM FACTURAS WHERE FECHA<DATE(2015,05,01) GROUP BY 1 INTO ARRAY LACLIENTESFIX
	IF !VARTYPE(LACLIENTESFIX)="U"
		FOR lnCliente2fix=1 TO ALEN(LACLIENTESFIX,1)
			
			lcIdCliente=ALLTRIM(LACLIENTESFIX(lnCliente2fix,1))
			lcDepto=ALLTRIM(LACLIENTESFIX(lnCliente2fix,2))

			WAIT "Estableciendo depto "+lcDepto +"a cliente: "+lcIdCliente WINDOW  NOWAIT 
			IF !EMPTY(lcDepto) AND !EMPTY(lcIdCliente)
				UPDATE clientes SET departamento=lcDepto WHERE ALLTRIM(idcliente)==ALLTRIM(lcIdCliente)
			ENDIF 
	
		ENDFOR 
		
	ENDIF 
	
ENDPROC 


PROCEDURE DQUIMCOL_FIXINV
	DO 	DQUIMCOL_RTCVERIF
	DO DQUIMCOL_INV_VERIF
	DO DQUIMCOL_INV_CLEAN_RTC_OCRC
	DO DQUIMCOL_REINDEXINV 
	DO DQUIMCOL_ELIMINARCABECERAS_OC_RQ
	DO DQUIMCOL_INV_SET_PREC_REF WITH "OA00000245"
ENDPROC 


PROCEDURE DQUIMCOL_INV_SET_PREC_REF
	LPARAMETERS tcOrden 
	SELECT CODIGO, COSTO  FROM DETALLEORDEN WHERE ALLTRIM(UPPER(NORDEN))==ALLTRIM(UPPER(tcOrden)) INTO ARRAY LAORDENINIT
	lnCount=0
	FOR LNITEMORDENINIT=1 TO ALEN (LAORDENINIT,1)
		lcCodigo=LAORDENINIT(LNITEMORDENINIT,1)
		lcPrecioRef=LAORDENINIT(LNITEMORDENINIT,2)
		lnCount = lnCount + 1 
		UPDATE inventario SET precioref=lcPrecioRef WHERE ALLTRIM(UPPER(codigo))=ALLTRIM(UPPER(lcCodigo))
		WAIT TRANSFORM(lnCount )+" "+ALLTRIM(lcCodigo)+" seteado con: "+ TRANSFORM(lcPrecioRef) WINDOW NOWAIT 
	ENDFOR 
	
ENDPROC 


PROCEDURE DQUIMCOL_ELIMINARCABECERAS_OC_RQ
	DELETE FROM ORDENCOMPRA WHERE NORDEN NOT IN (SELE NORDEN FROM DETALLEORDEN )
	DELETE FROM REQUISICIONES WHERE NREQUISICION NOT IN (SELE NREQUISICION FROM DETALLEREQUISICION )

ENDPROC 

PROCEDURE DQUIMCOL_REINDEXINV 
	CLOSE TABLES ALL 
	USE ORDENCOMPRA EXCLUSIVE 
	REINDEX 
	USE REQUISICIONES  EXCLUSIVE 
	REINDEX 
	USE DETALLEREQUISICION  EXCLUSIVE 
	REINDEX 
	USE DETALLEORDEN  EXCLUSIVE 
	REINDEX 
	USE OCRC_M  EXCLUSIVE 
	REINDEX 
	USE OCRC_D  EXCLUSIVE 
	REINDEX 

	USE RTC_M  EXCLUSIVE 
	REINDEX 
	
	USE RTC_D  EXCLUSIVE 
	REINDEX 
	
	USE RTC_R  EXCLUSIVE 
	REINDEX 
	
ENDPROC 

PROCEDURE DQUIMCOL_INV_CLEAN_RTC_OCRC
	**para dquimcol borra todas las ordenes de compra generadas por retaceos y recetas y ajustes y cualquiera que tenga idcatalogo 
	**despues hay que correr DQUIMCOL_INV_VERIF para limpiar los detalles 
	**
	RELEASE LACONTEO 
	SELECT COUNT(*) FROM DETALLEORDEN WHERE !EMPTY(IDCATALOGO) INTO ARRAY LACONTEO 
	
	DELETE FROM ORDENCOMPRA WHERE NORDEN IN (SELECT NORDEN FROM DETALLEORDEN WHERE !EMPTY(IDCATALOGO))
	
	lnOrdenes=0
	IF !VARTYPE(LACONTEO)="U" 
		lnOrdenes=LACONTEO
	ENDIF 


	RELEASE LACONTEO 
	SELECT COUNT(*) FROM DETALLEREQUISICION WHERE !EMPTY(IDCATA) INTO ARRAY LACONTEO 
	DELETE FROM REQUISICIONES WHERE NREQUISICION IN (SELECT NREQUISICION FROM DETALLEREQUISICION WHERE !EMPTY(IDCATA))
	
	lnRequisicion=0
	IF !VARTYPE(LACONTEO)="U" 
		lnRequisicion=LACONTEO
	ENDIF 

	MESSAGEBOX(	"Resultado:"+CHR(13)+;
				TRANSFORM(lnOrdenes)+ " lineas borradas en ordenes"+CHR(13)+;
				TRANSFORM(lnRequisicion)+ " lineas borradas en requisiciones")



ENDPROC 

PROCEDURE DQUIMCOL_INV_VERIF
**limpiando huerfanos en detalleorden y detallerequisicion con respecto a sus maestros 
**fecha: 30 sep 2015v
**se puede usar varias veces 
	RELEASE LACONTEO
	SELECT COUNT(*) FROM  DETALLEORDEN WHERE NORDEN NOT IN (SELECT norden FROM ordencompra ) INTO ARRAY LACONTEO
	DELETE FROM detalleorden WHERE norden NOT IN (SELECT norden FROM ordencompra )
	lnOrdenes=0
	IF !VARTYPE(LACONTEO)="U" 
		lnOrdenes=LACONTEO
	ENDIF 
	
	RELEASE LACONTEO
	SELECT COUNT(*) FROM  DETALLEREQUISICION WHERE NREQUISICION NOT IN (SELECT NREQUISICION FROM REQUISICIONES ) INTO ARRAY LACONTEO
	DELETE FROM detallerequisicion WHERE nrequisicion NOT IN (SELECT nrequisicion FROM requisiciones )	
	lnRequisiciones=0
	IF !VARTYPE(LACONTEO)="U" 
		lnRequisiciones=LACONTEO
	ENDIF 
	
	MESSAGEBOX(	"Resultado:"+CHR(13)+;
				TRANSFORM(lnOrdenes)+ " lineas borradas en ordenes"+CHR(13)+;
				TRANSFORM(lnRequisiciones)+ " lineas borradas en requisiciones")

ENDPROC 

PROCEDURE DQUIMCOL_RTCVERIF
**Fecha: 30 sep
**Limpia de hurfanos la tabla de retaceos

	**LIMPIANDO DE HUERFANOS RTC_D SI NO ESTAN EN RTC_M
	DELETE FROM RTC_D WHERE IDRTC NOT IN (SELECT IDRTC FROM RTC_M)

	**MOSTRANDO LOS QUE ESTAN EN RTC_D Y NO ESTAN DETALLEORDEN
	SELECT ALLTRIM(IDRTC)+ALLTRIM(CODIGO) FROM RTC_D WHERE TP=4 AND ALLTRIM(IDRTC)+ALLTRIM(CODIGO) ;
	NOT IN (SELECT ALLTRIM(IDCATALOGO)+ALLTRIM(CODIGO) FROM DETALLEORDEN WHERE IDCATALOGO="RTC")

	**MOSTRANDO LOS QUE ESTAN DETALLEORDEN Y NO ESTAN EN RTC_D
	SELECT ALLTRIM(IDCATALOGO)+ALLTRIM(CODIGO) AS RTC FROM DETALLEORDEN WHERE IDCATALOGO="RTC" AND ALLTRIM(IDCATALOGO)+ALLTRIM(CODIGO);
	NOT IN 	(SELECT ALLTRIM(IDRTC)+ALLTRIM(CODIGO) FROM RTC_D WHERE TP=4)

ENDPROC 

PROCEDURE DQUIMCOL_InsertCabeceraFacts
*fecha: desconocida
*procedimeinto que se uso para ingresar unas cabeceras de facturas que faltaban	en factlines, y por eso no cuadraba el listado de clientes
*comportamiento: daba error al trasladar las facturas de abril 
*solucion fue ingresarlas 
*no se debe volver a enviar este procedimiento, ya que haria que se dupliquen

	**comprobando que no hayan sido ingresadas ya 
	SELECT idventa  FROM facturas WHERE INLIST(IDVENTA,"VN00000070","VN00000071","VN00000072","VN00000073","VN00000074") INTO ARRAY laFactsInserted
	IF VARTYPE(laFactsInserted)="U"
	**ingresar encabezados de facturas por valores de idventa
		INSER INTO FACTURASLINES(;
				IDVENTA,	DESCRIPCION,	CANTIDAD,	PRECIO) ;
		SELECT 	IDVENTA,	DESCRIPCION,	VAL("1"),	SNETO 	;
		FROM 	FACTURAS WHERE 	INLIST(IDVENTA,"VN00000070","VN00000071","VN00000072","VN00000073","VN00000074")


		**verificando cuales son las que se metieron 
		SELECT 	IDVENTA,	DESCRIPCION,	VAL("1"),	SNETO ;
		FROM 	FACTURAS WHERE 	INLIST(IDVENTA,"VN00000070","VN00000071","VN00000072","VN00000073","VN00000074")

		**ingresar una que falto 
		INSER INTO FACTURASLINES(IDVENTA,	DESCRIPCION,	CANTIDAD,	PRECIO) SELECT 	IDVENTA,	DESCRIPCION,	VAL("1"),	SNETO FROM 	FACTURAS WHERE 	INLIST(IDVENTA,"VN00000001")	
	
	ELSE 
		MESSAGEBOX("Las facturas yan sido ingresadas")	
	ENDIF 
ENDPROC 